// 'use client';
//
// import { useRef } from 'react';
// import { Canvas, useFrame, useLoader } from '@react-three/fiber';
// import { OrbitControls, useGLTF } from '@react-three/drei';
// // import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';
// import { Mesh } from 'three';
// import * as THREE from 'three';
//
// function MeshComponent() {
//   const fileUrl = '/cat_3d/scene.gltf';
//   const mesh = useRef<Mesh>(null!);
//   const model = useGLTF(fileUrl);
//
//   console.log(model as any);
//
//   // const ambientLight = new THREE.AmbientLight(0xffffff, 0.1);
//   // model.scene.add(ambientLight);
//
//   // const dirLight = new THREE.DirectionalLight(0xefefff, 0.5);
//   // dirLight.position.set(100, 10, 10);
//   // model.scene.add(dirLight);
//
//   // let mixer: any;
//   // if (model.animations.length) {
//   //   mixer = new THREE.AnimationMixer(model.scene);
//   //   model.animations.forEach((clip) => {
//   //     const action = mixer.clipAction(clip);
//   //     action.play();
//   //   });
//   // }
//   //
//   // useFrame((state, delta) => {
//   //   mixer?.update(delta);
//   // });
//   // // *************************
//   //
//   // model.scene.traverse((child: any) => {
//   //   if (child.isMesh) {
//   //     child.castShadow = true;
//   //     child.receiveShadow = true;
//   //     child.material.side = THREE.FrontSide;
//   //   }
//   // });
//
//   return (
//     <mesh ref={mesh}>
//       <OrbitControls />
//       <ambientLight />
//       <pointLight position={[10, 10, 10]} />
//       <primitive object={model.scene} scale={2} />
//     </mesh>
//   );
// }
//

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 cat_chubby.glb
Author: JoseDiaz (https://sketchfab.com/JoseDiaz)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/cat-chubby-034eb323f0dc4510b7db82f9b4a5b8fb
Title: Cat Chubby
*/

'use client';
import { useGLTF, useAnimations, OrbitControls } from '@react-three/drei';
import { useRef } from 'react';
import { Canvas } from '@react-three/fiber';

export default function Cat(props: any) {
  const group = useRef(null);
  const { nodes, materials, animations }: any = useGLTF('/cat_3d/scene.gltf');
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name='Sketchfab_Scene'>
        <group name='Sketchfab_model' rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name='5dc540f72bda41dd91654f7fc696329bfbx'
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <group name='Object_2'>
              <group name='RootNode'>
                <group name='Object_4'>
                  <primitive object={nodes._rootJoint} />
                  <group name='Object_6' rotation={[-Math.PI / 2, 0, 0]} />
                  <group
                    name='Cat_Chubby_Mesh'
                    rotation={[-Math.PI / 2, 0, 0]}
                  />
                  <skinnedMesh
                    name='Object_7'
                    geometry={nodes.Object_7.geometry}
                    material={materials.Cat_Chubby}
                    skeleton={nodes.Object_7.skeleton}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/cat_chubby.glb');

export function Cat3d() {
  return (
    <div className='flex justify-center items-center h-screen'>
      <Canvas className='h-2xl w-2xl' shadows camera={{ position: [3, 2, -3] }}>
        <Cat />
        <OrbitControls />
      </Canvas>
    </div>
  );
}
